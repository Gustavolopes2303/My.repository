import streamlit as st
import pandas as pd
from pypdf import PdfReader
from datetime import datetime

# --- CONFIGURA√á√ÉO DA P√ÅGINA ---
st.set_page_config(
    page_title="Metadados Forenses de Documentos",
    page_icon="üîç",
    layout="centered"
)

# --- FUN√á√ÉO DE EXTRA√á√ÉO DE METADADOS ---
def extrair_metadados_pdf(uploaded_file):
    """Extrai metadados essenciais de um PDF."""
    try:
        # Abrindo o arquivo PDF
        reader = PdfReader(uploaded_file)
        
        # Acessando o dicion√°rio de metadados
        metadata = reader.metadata
        
        # Formatando as datas
        def formatar_data(data_obj):
            if data_obj:
                # O formato do pypdf √© complexo, mas convertemos para um formato amig√°vel.
                if isinstance(data_obj, datetime):
                    return data_obj.strftime("%d/%m/%Y %H:%M:%S")
                return str(data_obj).split('+')[0].replace('D:','')
            return "N√£o Encontrado"

        # Dicion√°rio de resultados
        dados = {
            "Metadado": [
                "Autor/Criador", 
                "Software Produtor", 
                "Data de Cria√ß√£o Original", 
                "Data da √öltima Modifica√ß√£o",
                "N√∫mero de P√°ginas"
            ],
            "Valor Encontrado": [
                metadata.author or metadata.creator or "Desconhecido",
                metadata.producer or "Desconhecido",
                formatar_data(metadata.creation_date),
                formatar_data(metadata.modification_date),
                len(reader.pages)
            ]
        }
        
        df = pd.DataFrame(dados)
        return df, metadata.producer
    except Exception as e:
        st.error(f"Erro ao processar o arquivo. Certifique-se de que √© um PDF v√°lido. Erro: {e}")
        return None, None

# --- INTERFACE STREAMLIT ---

st.title("üîç Metadados Forenses de Documentos")
st.markdown("## Scanner de Informa√ß√µes Ocultas (LegalTech)")
st.caption("Fa√ßa o upload de um arquivo PDF para analisar dados como autor original, software de cria√ß√£o e hist√≥rico de modifica√ß√£o. Uma ferramenta simples que gera *insights* valiosos em processos.")

uploaded_file = st.file_uploader(
    "Carregar Arquivo PDF (.pdf)", 
    type=["pdf"],
    accept_multiple_files=False 
)

if uploaded_file is not None:
    st.success("Arquivo carregado com sucesso!")
    
    # Processamento e Extra√ß√£o
    df_metadados, produtor = extrair_metadados_pdf(uploaded_file)
    
    if df_metadados is not None:
        
        # --- EXIBI√á√ÉO CRIATIVA E INTELIGENTE ---
        st.subheader("üìã Relat√≥rio de An√°lise Forense")
        
        # Destaque do Software Produtor (O que faz parecer inteligente)
        st.info(f"O Software Produtor do documento √©: **{produtor or 'N√£o Registrado'}**")
        
        # Exibi√ß√£o dos Metadados em uma Tabela Elegante
        # Usa Markdown/HTML para centralizar e dar destaque visual
        st.dataframe(df_metadados.set_index('Metadado'), use_container_width=True)
        
        # --- AN√ÅLISE B√îNUS DE TIMELINE ---
        
        data_criacao_str = df_metadados.loc[df_metadados['Metadado'] == 'Data de Cria√ß√£o Original', 'Valor Encontrado'].iloc[0]
        data_modificacao_str = df_metadados.loc[df_metadados['Metadado'] == 'Data da √öltima Modifica√ß√£o', 'Valor Encontrado'].iloc[0]
        
        # Tenta calcular a diferen√ßa
        try:
            data_criacao = datetime.strptime(data_criacao_str.split(' ')[0], "%d/%m/%Y")
            data_modificacao = datetime.strptime(data_modificacao_str.split(' ')[0], "%d/%m/%Y")
            dias_entre = (data_modificacao - data_criacao).days
            
            st.markdown("---")
            st.subheader("‚åõ Timeline do Documento")
            
            # M√©trica que parece dif√≠cil de calcular
            st.metric(
                label="Tempo entre Cria√ß√£o e √öltima Modifica√ß√£o", 
                value=f"{dias_entre} dias",
                help="Indica o per√≠odo em que o documento pode ter sido revisado ativamente."
            )
            
        except:
            st.warning("N√£o foi poss√≠vel calcular o tempo de vida (datas ausentes ou incompletas).")
